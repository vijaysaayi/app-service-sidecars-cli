# Antares .editorconfig, for global style and analyzer rules.
#
# These rules run for ALL BUILDS.
#
# We should not put new *erroring* analyzers directly here (warnings are errors).
# Instead, they should go in src\.editorconfig first - those are our "staging" analyzers, and graduate to here after a day to not break the world.
# Please see src\.editorconfig for deeper details.


# Top-most EditorConfig file
root = true

# Tab indentation
[*]
charset = utf-8
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

# Project files are 2 spaces
[*.{props,targets,csproj,proj,nuproj,vcxproj}]
indent_size = 2

# C# files
[*.cs]

###################################################################
# Global style rules (ported from .rulesets) - mostly off right now
# See https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options
###################################################################

###############################
# .NET Coding Conventions     #
###############################
# Organize usings
dotnet_sort_system_directives_first = true
# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent # true:suggestion
dotnet_style_predefined_type_for_member_access = true:silent # true:suggestion
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:silent # true:suggestion
# Expression-level preferences
dotnet_style_object_initializer = true:silent # true:suggestion
dotnet_style_collection_initializer = true:silent # true:suggestion
dotnet_style_explicit_tuple_names = true:silent # true:suggestion
dotnet_style_null_propagation = true:silent # true:suggestion
dotnet_style_coalesce_expression = true:silent # true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:silent # true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:silent # true:suggestion
dotnet_style_prefer_auto_properties = true:silent # true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# C# Coding Conventions       #
###############################
# var preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent
# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:silent # true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:silent # true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:silent # true:suggestion
csharp_style_conditional_delegate_call = true:silent # true:suggestion
# Modifier preferences
sharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:silent # suggestion
# Expression-level preferences
csharp_prefer_braces = true:silent # true:suggestion
csharp_prefer_simple_default_expression = true:silent # true:suggestion
csharp_prefer_simple_using_statement = true:silent
csharp_style_deconstructed_variable_declaration = true:silent
csharp_style_implicit_object_creation_when_type_is_apparent = true:silent
csharp_style_inlined_variable_declaration = true:silent # true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:silent # true:suggestion
csharp_style_prefer_index_operator = false:silent
csharp_style_prefer_range_operator = false:silent

# Async methods should have "Async" suffix (so we better spot unawaited things as they change to async e.g. in code reviews)
dotnet_naming_rule.async_methods_end_in_async.symbols = any_async_methods
dotnet_naming_rule.async_methods_end_in_async.style = end_in_async
dotnet_naming_rule.async_methods_end_in_async.severity = suggestion
dotnet_naming_symbols.any_async_methods.applicable_kinds = method
dotnet_naming_symbols.any_async_methods.applicable_accessibilities = *
dotnet_naming_symbols.any_async_methods.required_modifiers = async
dotnet_naming_style.end_in_async.required_prefix =
dotnet_naming_style.end_in_async.required_suffix = Async
dotnet_naming_style.end_in_async.capitalization = pascal_case
dotnet_naming_style.end_in_async.word_separator =

###############################
# C# Formatting Rules         #
###############################
# TODO From https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options
# TEST THESE: https://github.com/dotnet/docs/issues/22080

# Legacy Rules
dotnet_diagnostic.IDE0001.severity = none # IDE0001: Simplify member access
dotnet_diagnostic.IDE0002.severity = none # IDE0002: Simplify member access
dotnet_diagnostic.IDE0004.severity = none # IDE0004: Remove unnecessary cast
dotnet_diagnostic.IDE1006.severity = suggestion # IDE1006: Naming Rule Violation
dotnet_diagnostic.IDE0010.severity = none # IDE0010: Add missing cases to switch statement


dotnet_diagnostic.IDE0043.severity = none
dotnet_diagnostic.IDE0051.severity = suggestion # error # IDE0051: Remove unused private members

###############################
# Public API Enforcers        #
###############################

# Needs explicit ignores where we can't change API
dotnet_diagnostic.RS0016.severity = error
dotnet_diagnostic.RS0017.severity = error
dotnet_diagnostic.RS0026.severity = suggestion # RS0026: Symbol 'ResponseMessageEnvelope' violates the backcompat requirement
dotnet_diagnostic.RS0027.severity = suggestion # RS0027: Symbol violates the backcompat requirement

###################################################################
# Global Stylecop rulesets
###################################################################

dotnet_diagnostic.SA0001.severity = none # SA0001: XML comment analysis is disabled due to project configurationalyzers/StyleCopAnalyzers/blob/master/documentation/SA0001.md)	Microsoft.Web.Hosting.Tracing-nogac	C:\ms\Antares\dev\src\Hosting\common\Tracing\dll-nogac\CSC	1

dotnet_diagnostic.SA1000.severity = silent # SA1000: Keywords should be spaced correctly
dotnet_diagnostic.SA1001.severity = silent # SA1001: Commas should be spaced correctly
dotnet_diagnostic.SA1002.severity = error # SA1002: Semicolons should be spaced correctly
dotnet_diagnostic.SA1003.severity = silent # SA1003: Symbols should be spaced correctly
dotnet_diagnostic.SA1004.severity = none # SA1004: Documentation lines should begin with single space
dotnet_diagnostic.SA1005.severity = silent # SA1005: Single line comments should begin with single space
dotnet_diagnostic.SA1006.severity = error # SA1006: Preprocessor keywords should not be preceded by space
dotnet_diagnostic.SA1008.severity = silent # SA1008: Opening parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = silent # SA1009: Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1010.severity = error # SA1010: Opening square brackets should be spaced correctly
dotnet_diagnostic.SA1011.severity = error # SA1011: Closing square brackets should be spaced correctly
dotnet_diagnostic.SA1012.severity = none # SA1012: Opening braces should be spaced correctly
dotnet_diagnostic.SA1013.severity = none # SA1013: Closing braces should be spaced correctly
dotnet_diagnostic.SA1014.severity = error # SA1014: An opening generic bracket within a C# element is not spaced correctly
dotnet_diagnostic.SA1015.severity = error # SA1015: A closing generic bracket within a C# element is not spaced correctly
dotnet_diagnostic.SA1016.severity = error # SA1016: An opening attribute bracket within a C# element is not spaced correctly
dotnet_diagnostic.SA1017.severity = error # SA1017: A closing attribute bracket within a C# element is not spaced correctly
dotnet_diagnostic.SA1018.severity = error # SA1018: A nullable type symbol within a C# element is not spaced correctly
dotnet_diagnostic.SA1019.severity = suggestion # SA1019: Member access symbols should be spaced correctly
dotnet_diagnostic.SA1020.severity = error # SA1020: An increment or decrement symbol within a C# element is not spaced correctly
dotnet_diagnostic.SA1021.severity = error # SA1021: A negative sign within a C# element is not spaced correctly
dotnet_diagnostic.SA1022.severity = error # SA1022: A positive sign within a C# element is not spaced correctly
dotnet_diagnostic.SA1023.severity = error # SA1023: A dereference symbol or an access-of symbol within a C# element is not spaced correctly
dotnet_diagnostic.SA1024.severity = error # SA1024: Colons Should Be Spaced Correctly
dotnet_diagnostic.SA1025.severity = error # SA1025: The code contains multiple whitespace characters in a row
dotnet_diagnostic.SA1026.severity = error # SA1026: An implicitly typed array allocation within a C# code file is not spaced correctly
dotnet_diagnostic.SA1027.severity = error # SA1027: The code contains a tab or space character which is not consistent with the current project settings
dotnet_diagnostic.SA1028.severity = silent # SA1028: Code should not contain trailing whitespace

dotnet_diagnostic.SA1100.severity = none # SA1100: Do not prefix calls with base unless local implementation exists
dotnet_diagnostic.SA1101.severity = none # SA1101: Prefix local calls with this
dotnet_diagnostic.SA1102.severity = suggestion # SA1102: Query clause should follow previous clause
dotnet_diagnostic.SA1106.severity = none # SA1106: Code should not contain empty statements
dotnet_diagnostic.SA1107.severity = error # SA1107: Code should not contain multiple statements on one line
dotnet_diagnostic.SA1108.severity = none # SA1108: Block statements should not contain embedded comments
dotnet_diagnostic.SA1110.severity = none # SA1110: Opening parenthesis or bracket should be on declaration line
dotnet_diagnostic.SA1111.severity = none # SA1111: Closing parenthesis should be on line of last parameter
dotnet_diagnostic.SA1113.severity = suggestion # SA1113: Comma should be on the same line as previous parameter
dotnet_diagnostic.SA1114.severity = none # SA1114: Parameter list should follow declaration
dotnet_diagnostic.SA1115.severity = suggestion # SA1115: Parameter should follow comma
dotnet_diagnostic.SA1116.severity = none # SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1117.severity = none # SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1118.severity = none # SA1118: Parameter should not span multiple lines
dotnet_diagnostic.SA1119.severity = none # SA1119: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1120.severity = silent # SA1120: Comments should contain text
dotnet_diagnostic.SA1121.severity = none # SA1121: Use built-in type alias
dotnet_diagnostic.SA1122.severity = none # SA1122: Use string.Empty for empty strings
dotnet_diagnostic.SA1123.severity = none # SA1123: Do not place regions within elements
dotnet_diagnostic.SA1124.severity = none # SA1124: Do not use regions
dotnet_diagnostic.SA1125.severity = error # SA1125: Use shorthand for nullable types
dotnet_diagnostic.SA1127.severity = none # SA1127: Generic type constraints should be on their own line
dotnet_diagnostic.SA1128.severity = none # SA1128: Put constructor initializers on their own line
dotnet_diagnostic.SA1129.severity = none # SA1129: Do not use default value type constructor
dotnet_diagnostic.SA1130.severity = suggestion # SA1130: Use lambda syntax
dotnet_diagnostic.SA1131.severity = none # SA1131: Use readable conditions
dotnet_diagnostic.SA1132.severity = suggestion # SA1132: Do not combine fields
dotnet_diagnostic.SA1133.severity = none # SA1133: Do not combine attributes
dotnet_diagnostic.SA1134.severity = none # SA1134: Attributes should not share line
dotnet_diagnostic.SA1135.severity = error # SA1135: Using directive for type 'Microsoft.CodeAnalysis.CSharp.SyntaxFactory' should be qualified
dotnet_diagnostic.SA1136.severity = none # SA1136: Enum values should be on separate lines
dotnet_diagnostic.SA1137.severity = none # SA1137: Elements should have the same indentation
dotnet_diagnostic.SA1139.severity = none # SA1139: Use literal suffix notation instead of casting

dotnet_diagnostic.SA1200.severity = none # SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1201.severity = none # SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1202.severity = none # SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1203.severity = none # SA1203: Constants should appear before fields
dotnet_diagnostic.SA1204.severity = none # SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1205.severity = suggestion # SA1205: Partial elements should declare access
dotnet_diagnostic.SA1206.severity = none # SA1206: Declaration keywords should follow order
dotnet_diagnostic.SA1207.severity = suggestion # SA1207: Protected should come before internal
dotnet_diagnostic.SA1208.severity = error # SA1208: System using directives must be placed before other using directives
dotnet_diagnostic.SA1209.severity = error # SA1209: A using-alias directive is positioned before a regular using directive
dotnet_diagnostic.SA1210.severity = error # SA1210: Using directives must be ordered alphabetically by namespace
dotnet_diagnostic.SA1211.severity = error # SA1211: Using alias directives must be ordered alphabetically by alias name
dotnet_diagnostic.SA1212.severity = none # SA1212: Property accessors should follow order
dotnet_diagnostic.SA1214.severity = none # SA1214: Readonly fields should appear before non-readonly fields
dotnet_diagnostic.SA1216.severity = suggestion # SA1216: Using static directives should be placed at the correct location

dotnet_diagnostic.SA1300.severity = none # SA1300: Element should begin with upper-case letter
dotnet_diagnostic.SA1302.severity = suggestion # SA1302: Interface names should begin with I
dotnet_diagnostic.SA1303.severity = none # SA1303: Const field names should begin with upper-case letter
dotnet_diagnostic.SA1304.severity = none # SA1304: Non-private readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1306.severity = none # SA1306: Field names should begin with lower-case letter
dotnet_diagnostic.SA1307.severity = none # SA1307: Accessible fields should begin with upper-case letter
dotnet_diagnostic.SA1308.severity = none # SA1308: Variable names should not be prefixed
dotnet_diagnostic.SA1309.severity = none # SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1310.severity = none # SA1310: Field names should not contain underscore
dotnet_diagnostic.SA1311.severity = none # SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1312.severity = none # SA1312: Variable names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = none # SA1313: Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1314.severity = none # SA1314: Type parameter names should begin with T
dotnet_diagnostic.SA1316.severity = none # SA1316: Tuple element names should use correct casing

dotnet_diagnostic.SA1400.severity = none # SA1400: Access modifier should be declared
dotnet_diagnostic.SA1401.severity = none # SA1401: Fields should be private
dotnet_diagnostic.SA1402.severity = none # SA1402: File may only contain a single type
dotnet_diagnostic.SA1403.severity = none # SA1403: File may only contain a single namespace
dotnet_diagnostic.SA1404.severity = none # SA1404: Code analysis suppression should have justification
dotnet_diagnostic.SA1405.severity = suggestion # SA1405: Debug.Assert should provide message text
dotnet_diagnostic.SA1407.severity = none # SA1407: Arithmetic expressions should declare precedence
dotnet_diagnostic.SA1408.severity = suggestion # SA1408: Conditional expressions should declare precedence
dotnet_diagnostic.SA1410.severity = suggestion # SA1410: Remove delegate parenthesis when possible
dotnet_diagnostic.SA1411.severity = suggestion # SA1411: Attribute constructor should not use unnecessary parenthesis
dotnet_diagnostic.SA1413.severity = silent # SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1414.severity = none # SA1414: Tuple types in signatures should have element names

dotnet_diagnostic.SA1500.severity = suggestion # SA1500: Braces for multi-line statements should not share line
dotnet_diagnostic.SA1501.severity = none # SA1501: Statement should not be on a single line
dotnet_diagnostic.SA1502.severity = none # SA1502: Element should not be on a single line
dotnet_diagnostic.SA1503.severity = none # SA1503: Braces should not be omitted
dotnet_diagnostic.SA1504.severity = none # SA1504: All accessors should be single-line or multi-line
dotnet_diagnostic.SA1505.severity = none # SA1505: Opening braces should not be followed by blank line
dotnet_diagnostic.SA1506.severity = suggestion # SA1506: Element documentation headers should not be followed by blank line
dotnet_diagnostic.SA1507.severity = error # SA1507: Code must not contain multiple blank lines in a row
dotnet_diagnostic.SA1508.severity = none # SA1508: Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1509.severity = error # SA1509: Opening braces must not be preceded by blank line
dotnet_diagnostic.SA1510.severity = suggestion # SA1510: Chained statement blocks should not be preceded by blank line
dotnet_diagnostic.SA1512.severity = none # SA1512: Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1513.severity = none # SA1513: Closing brace should be followed by blank line
dotnet_diagnostic.SA1514.severity = none # SA1514: Element documentation header should be preceded by blank line
dotnet_diagnostic.SA1515.severity = none # SA1515: Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1516.severity = none # SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1517.severity = error # SA1517: Code must not contain blank lines at start of file
dotnet_diagnostic.SA1518.severity = error # SA1518: Use line endings correctly at end of file
dotnet_diagnostic.SA1519.severity = suggestion # SA1519: Braces should not be omitted from multi-line child statement
dotnet_diagnostic.SA1520.severity = suggestion # SA1520: Use braces consistently

dotnet_diagnostic.SA1600.severity = none # SA1600: Elements should be documented
dotnet_diagnostic.SA1601.severity = none # SA1601: Partial elements should be documented
dotnet_diagnostic.SA1602.severity = none # SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1604.severity = none # SA1604: Element documentation should have summary
dotnet_diagnostic.SA1606.severity = none # SA1606: Element documentation should have summary text
dotnet_diagnostic.SA1611.severity = none # SA1611: Element parameters should be documented
dotnet_diagnostic.SA1612.severity = none # SA1612: Element parameter documentation must match element parameters
dotnet_diagnostic.SA1614.severity = none # SA1614: Element parameter documentation should have text
dotnet_diagnostic.SA1615.severity = none # SA1615: Element return value should be documented
dotnet_diagnostic.SA1616.severity = none # SA1614: Element return value documentation should have text
dotnet_diagnostic.SA1617.severity = suggestion # SA1617: Void return value should not be documented
dotnet_diagnostic.SA1618.severity = none # SA1618: Generic type parameters should be documented
dotnet_diagnostic.SA1622.severity = suggestion # SA1622: Generic type parameter documentation should have text
dotnet_diagnostic.SA1623.severity = none # SA1623: Property summary documentation should match accessors
dotnet_diagnostic.SA1625.severity = suggestion # SA1625: Element documentation should not be copied and pasted
dotnet_diagnostic.SA1626.severity = none # SA1626: Single-line comments should not use documentation style slashes
dotnet_diagnostic.SA1629.severity = none # SA1629: Documentation text should end with a period
dotnet_diagnostic.SA1633.severity = none # SA1633: File header XML is invalid
dotnet_diagnostic.SA1635.severity = none # SA1635: File header should have copyright text
dotnet_diagnostic.SA1636.severity = none # SA1636: File header does not contain the appropriate copyright text
dotnet_diagnostic.SA1637.severity = none # SA1637: File header should contain file name
dotnet_diagnostic.SA1638.severity = none # SA1638: File header file name documentation should match file name
dotnet_diagnostic.SA1640.severity = suggestion # SA1640: File header should have valid company text
dotnet_diagnostic.SA1641.severity = none # SA1641: File header company name should match the company name from the settings
dotnet_diagnostic.SA1642.severity = none # SA1642: Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1649.severity = none # SA1649: File name should match first type name


# src\hosting\Azure\Analytics\ServiceHealthDashboard\Microsoft.Web.Hosting.Dashboard\Controllers\SLASitePingerController.cs(18,41)
# error CA3147: Missing ValidateAntiForgeryTokenAttribute on MVC controller action Index which by default accepts POST requests
# dotnet_diagnostic.CA3147.severity = none

###################################################################
# Compat rules to cleanup
###################################################################
dotnet_diagnostic.CA1416.severity = suggestion # CA1416: Validate platform compatibility
dotnet_diagnostic.CA2022.severity = suggestion # CA2022: Avoid inexact read with 'Stream.Read'

dotnet_diagnostic.CS0108.severity = suggestion # CS0108: Member hides inherited member; missing new keyword
dotnet_diagnostic.CS0109.severity = suggestion # CS0109: Member does not hide an inherited member; new keyword is not required
dotnet_diagnostic.CS0114.severity = suggestion # CS0114: Member hides inherited member; missing override keyword
dotnet_diagnostic.CS0219.severity = suggestion # CS0219: Variable is assigned but its value is never used
dotnet_diagnostic.CS0436.severity = suggestion # CS0436: Type conflicts with imported type
dotnet_diagnostic.CS0472.severity = suggestion # CS0472: The result of the expression is always the same since a value of this type is never equal to 'null'
dotnet_diagnostic.CS0612.severity = suggestion # CS0612: Type or member is obsolete
dotnet_diagnostic.CS0618.severity = suggestion # CS0618: Type or member is obsolete
dotnet_diagnostic.CS0659.severity = suggestion # CS0659: Type overrides Object.Equals(object o) but does not override Object.GetHashCode()
dotnet_diagnostic.CS0661.severity = suggestion # CS0661: Type defines operator == or operator != but does not override Object.GetHashCode()
dotnet_diagnostic.CS0672.severity = suggestion # CS0672: Member overrides obsolete member
dotnet_diagnostic.CS0728.severity = suggestion # CS0728: Possibly incorrect assignment to local which is the argument to a using or lock statement

dotnet_diagnostic.CS1570.severity = suggestion # CS1570: XML comment has badly formed XML
dotnet_diagnostic.CS1573.severity = suggestion # CS1573: Parameter has no matching param tag in the XML comment (but other parameters do)
dotnet_diagnostic.CS1591.severity = suggestion # CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1718.severity = suggestion # CS1718: Comparison made to same variable
dotnet_diagnostic.CS1998.severity = suggestion # CS1998: Async method lacks 'await' operators and will run synchronously

dotnet_diagnostic.CS4014.severity = suggestion # CS4014: Because this call is not awaited, execution of the current method continues before the call is completed

dotnet_diagnostic.CS8002.severity = none # CS8002: Referenced assembly does not have a strong name.
dotnet_diagnostic.CS8073.severity = none # CS8073: The result of the expression is always 'false' (or 'true').

###################################################################
# Performance rules enabled
###################################################################
# TODO: Make these warnings. Temporarily made suggestion to get the bulk of the fixes in without concern for breaks that arrive in the interim.
dotnet_diagnostic.CA1826.severity = suggestion # CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1840.severity = suggestion # CA1840: Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId
dotnet_diagnostic.CA1859.severity = suggestion # CA1859: Use concrete types when possible for improved performance
